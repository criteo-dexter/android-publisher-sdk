apply plugin: 'com.android.application'
apply plugin: 'maven-publish'
apply plugin: 'kotlin-android'

def support_version = "28.0.0"
android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.criteo.pubsdk_android"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "${rootProject.publishVersion}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        staging {
            initWith debug
        }
    }

    flavorDimensions "mode"
    productFlavors {
        memoryLeaksHunt {
            dimension "mode"
            versionNameSuffix "-memoryLeaksHunt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError true
        lintConfig file('lint.xml')
    }
}
configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:$support_version"
        force "com.android.support:support-v4:$support_version"
        force "com.android.support:customtabs:$support_version"
    }
}

dependencies {
    implementation project(':publisher-sdk')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "com.android.support:design:$support_version"

    // For Google AdMob
    implementation 'com.google.android.gms:play-services-ads:15.0.1'

    // For MoPub banners
    implementation('com.mopub:mopub-sdk-banner:5.6.0@aar') {
        transitive = true
    }

    // For MoPub interstitials
    implementation('com.mopub:mopub-sdk-interstitial:5.6.0@aar') {
        transitive = true
    }

    memoryLeaksHuntImplementation('com.squareup.leakcanary:leakcanary-android:2.1')
}

// Define artifacts to publish to Nexus

class Apk extends Jar {
    String getExtension() { 'apk' }
}

task packageApkRelease(type: Apk, dependsOn: 'assembleRelease') {
    from file("${project.buildDir}/outputs/apk/memoryLeaksHunt/app-memoryLeaksHunt-release-unsigned.apk")
    classifier 'release'
}

task packageApkDebug(type: Apk, dependsOn: 'assembleDebug') {
    from file("${project.buildDir}/outputs/apk/memoryLeaksHunt/app-memoryLeaksHunt-debug.apk")
    classifier 'debug'
}

publish {
    publishing {
        with rootProject.publishRepositoryConfig
        publications {
            apk(MavenPublication) {
                groupId 'com.criteo.pubsdk_android'
                artifactId 'publisher-app'
                version rootProject.publishVersion
                artifact packageApkRelease
                artifact packageApkDebug
            }
        }
    }
}

