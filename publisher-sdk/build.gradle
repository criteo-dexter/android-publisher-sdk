apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    buildToolsVersion '27.0.3'
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "3.2.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    lintOptions {
        abortOnError true
        lintConfig file('lint.xml')
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'consumer-proguard.txt'
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'consumer-proguard.txt'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:support-core-utils:27.0.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20140107'
    testImplementation 'org.mockito:mockito-core:2.7.0'
    testImplementation 'com.google.android.gms:play-services-ads:15.0.1'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.1.10'
    testImplementation 'org.assertj:assertj-core:3.11.1'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
    androidTestImplementation 'com.google.android.gms:play-services-ads:15.0.1'
}

// Define artifacts to publish to Nexus

task packageAarRelease(type: Zip, dependsOn: 'bundleRelease') {
    from file("${project.buildDir}/outputs/aar/publisher-sdk-release.aar")
    classifier 'release'
}

task packageAarDebug(type: Zip, dependsOn: 'bundleDebug') {
    from file("${project.buildDir}/outputs/aar/publisher-sdk-debug.aar")
    classifier 'debug'
}

publish {
    publishing {
        with rootProject.publishRepositoryConfig
        publications {
            zip(MavenPublication) {
                groupId 'com.criteo.publisher'
                artifactId 'sdk'
                version rootProject.publishVersion
                artifact packageAarRelease
                artifact packageAarDebug
            }
        }
    }
}
